/*!
 * Start Bootstrap - SB Admin v4.0.0-beta.2 (https://startbootstrap.com/template-overviews/sb-admin)
 * Copyright 2013-2017 Start Bootstrap
 * Licensed under MIT (https://github.com/BlackrockDigital/startbootstrap-sb-admin/blob/master/LICENSE)
 */

$(document).ready(function()
{
    $("#HomeLoandataTable").DataTable();
    $("#RentAgmtdataTable").DataTable();
    $("#dataTable").DataTable();
    
    $("#renewal_dataTable").DataTable();
    $("#schedule_dataTable").DataTable();
    $("#agent_birthday_dataTable").DataTable();
    $("#staff_birthday_dataTable").DataTable();
});

$(document).ready(function()
{
    // DataTables initialisation
    var table = $('#RegisteredDataTable').DataTable(
    {
        "order":[],
        initComplete: function()
        {
            var recordcolumn = this.api().column(21);

            var recordselect = $('<select class="filter"><option value="">All</option></select>')
            .appendTo($(recordcolumn.header()))
            .on('change', function() {
            var recordval = $(this).val();
            recordcolumn.search(recordval ? '^' + $(this).val() + '$' : recordval, true, false).draw();
            });

            // column.data().unique().sort().each(function(d, j) {
            // select.append('<option value="' + d + '">' + d + '</option>');
            // });

            $.ajax({    //create an ajax request to display.php
                type: "GET",
                url: "ajax-recordstatus.php",             
                dataType: "html",   //expect html to be returned                
                success: function(response)
                {
                    // console.log(response);
                    recordselect
                        .append(response);
                }
            });
            /*select
                .append('<option value="Active">Active</option>')
                .append('<option value="Inactive">Inactive</option>')
                .append('<option value="Processing">Processing</option>')
                .append('<option value="Submitted">Submitted</option>');*/
                
            var amtcolumn = this.api().column(19);

            var amtselect = $('<select class="amt_filter"><option value="">All</option></select>')
            .appendTo($(amtcolumn.header()))
            .on('change', function() {
            var amtval = $(this).val();
            console.log(amtval);
            amtcolumn.search(amtval).draw();
            });

            amtselect
                .append('<option value="Paid">Paid</option>')
                .append('<option value="Balance">Balance</option>')
                .append('<option value="Estimate">Estimate</option>');
        }
    });
    
    var table_copy = $("#RegisteredDataTable_copy").DataTable({ paging: false });
    
    var enquiry_copy = $(".enquiry_data").DataTable({ paging: false });
    
    // $(".clone_table").html($('#RegisteredDataTable'));
    
    var enquiry_table = $('#EnquirydataTable').DataTable({
        "ordering": false,
        
        initComplete: function()
        {
            var en_column = this.api().column(7);

            var en_select = $('<select class="en_filter"><option value="">All</option></select>')
            .appendTo($(en_column.header()))
            .on('change', function() {
            var en_val = $(this).val();
            en_column.search(en_val ? '^' + $(this).val() + '$' : en_val, true, false).draw();
            enquiry_copy.column(7).search($(this).val()).draw();
            });

            en_select
                .append('<option value="Completed">Completed</option>')
                .append('<option value="Pending">Pending</option>');
        }
    });
    
    // $(".en_filter").change(function ()
    // {
    //     $.fn.dataTable.ext.search.push( function(settings, data, dataIndex)
    //     {
    //         data[7];
    //     });
    //     enquiry_copy.draw();
        
    //     $.fn.dataTable.ext.search.pop();
    // });

    $(function()
    {
        var start = moment();
        var end = moment();

        function cb(start, end)
        {
            $('#reportrange span').html(start.format('DD/MM/YYYY') + ' - ' + end.format('DD/MM/YYYY'));
        }

        $('#reportrange').daterangepicker({
            startDate: start,
            endDate: end,
            ranges: {
            'Today': [moment(), moment()],
            'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
            'Last 7 Days': [moment().subtract(6, 'days'), moment()],
            'Last 30 Days': [moment().subtract(29, 'days'), moment()],
            'This Month': [moment().startOf('month'), moment().endOf('month')],
            'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
            }
        }, cb);//date rangepicker ends here

        cb(start, end);

    }); 


    $('#reportrange').on('apply.daterangepicker', function(ev, picker)
    {
        var start = picker.startDate;
        var end = picker.endDate;

        $('#startSearch').prop("value", start.format('DD-MM-YYYY'));
        $('#endSearch').prop("value", end.format('DD-MM-YYYY'));

        $.fn.dataTable.ext.search.push( function(settings, data, dataIndex)
        {
            var min = start;
            var max = end;
            // var startDate = new Date(data[7]);
            // var endDate = new Date(data[8]);
            var date = new Date(data[1]);

            if (min == null && max == null)
            {
                return true;
            }
            if (min == null && date <= max)
            {
                return true;
            }
            if (max == null && date >= min)
            {
                return true;
            }
            if (date <= max && date >= min)
            {
                return true;
            }

            // if (min == null && endDate <= max)
            // {
            //     return true;
            // }
            // if (max == null && endDate >= min)
            // {
            //     return true;
            // }
            // if (endDate <= max && endDate >= min)
            // {
            //     return true;
            // }
            return false;
        }); //external search ends here

        table.draw();
        table_copy.draw();
        
        $.fn.dataTable.ext.search.pop();

    }); // report range ends here

});

// function exporttocsv()
// {  
//     $(".registered_data").tableToCSV({  
//         filename: 'registered Details'  
//     });  
// } 

function exporttoexcel()
{
    // Clone the element to export
    let clone = $('#RegisteredDataTable_copy');
    
    // Remove what you want to remove from it
    // clone.find("select.filter").remove();
  
    $(clone).table2excel({
      exclude:".noExl",
      name:"Worksheet Name",
      filename:"RegisteredDocument",
      fileext:".xls",
      exclude_img:true,
      exclude_links:false,
      exclude_inputs:true
    //   columns : [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]
    });
}

function exporttoexcelHomeLoan()
{
    $(".homeloan_data").table2excel({
      exclude:".noExl",
      name:"Worksheet Name",
      filename:"HomeLoan",
      fileext:".xls",
      exclude_img:true,
      exclude_links:true,
      exclude_inputs:true
    });
}

function exporttoexcelRentAgreement()
{
    $(".rentagmt_data").table2excel({
      exclude:".noExl",
      name:"Worksheet Name",
      filename:"RentAgreement",
      fileext:".xls",
      exclude_img:true,
      exclude_links:true,
      exclude_inputs:true
    });
}

function exporttoexcelEnquiry()
{
    let enquiry = $(".enquiry_data");
    
    $(enquiry).table2excel({
      exclude:".noExl",
      name:"Worksheet Name",
      filename:"Enquiry_Details",
      fileext:".xls",
      exclude_img:true,
      exclude_links:false,
      exclude_inputs:true
    });
}

function exporttoexcelAgent()
{
    let agent = $('.agent_data');
    
    $(agent).table2excel({
      exclude:".noExl",
      name:"Worksheet Name",
      filename:"Agent_Details",
      fileext:".xls",
      exclude_img:true,
      exclude_links:false,
      exclude_inputs:true
    });
}